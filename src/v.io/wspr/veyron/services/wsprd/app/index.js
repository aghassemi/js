// This file was auto-generated by the veyron vdl tool.
var vdl = require('../../../../../.././vdl');





var security = require('./../../../../../core/veyron2/security');
var vtrace = require('./../../../../../core/veyron2/vtrace');

module.exports = {};



// Types:
var _type1 = new vdl.Type();
var _type2 = new vdl.Type();
var _type3 = new vdl.Type();
var _type4 = new vdl.Type();
var _type5 = new vdl.Type();
var _typeBlessingRequest = new vdl.Type();
var _typeVeyronRPCRequest = new vdl.Type();
var _typeVeyronRPCResponse = new vdl.Type();
_type1.kind = vdl.Kind.LIST;
_type1.name = "";
_type1.elem = vdl.Types.ANY;
_type2.kind = vdl.Kind.LIST;
_type2.name = "";
_type2.elem = new vtrace.SpanRecord()._type;
_type3.kind = vdl.Kind.LIST;
_type3.name = "";
_type3.elem = new vtrace.Annotation()._type;
_type4.kind = vdl.Kind.LIST;
_type4.name = "";
_type4.elem = new security.Caveat()._type;
_type5.kind = vdl.Kind.LIST;
_type5.name = "";
_type5.elem = vdl.Types.BYTE;
_typeBlessingRequest.kind = vdl.Kind.STRUCT;
_typeBlessingRequest.name = "v.io/wspr/veyron/services/wsprd/app.BlessingRequest";
_typeBlessingRequest.fields = [{name: "Handle", type: vdl.Types.INT32}, {name: "Caveats", type: _type4}, {name: "DurationMs", type: vdl.Types.INT32}, {name: "Extension", type: vdl.Types.STRING}];
_typeVeyronRPCRequest.kind = vdl.Kind.STRUCT;
_typeVeyronRPCRequest.name = "v.io/wspr/veyron/services/wsprd/app.VeyronRPCRequest";
_typeVeyronRPCRequest.fields = [{name: "Name", type: vdl.Types.STRING}, {name: "Method", type: vdl.Types.STRING}, {name: "NumInArgs", type: vdl.Types.INT32}, {name: "NumOutArgs", type: vdl.Types.INT32}, {name: "IsStreaming", type: vdl.Types.BOOL}, {name: "Timeout", type: vdl.Types.INT64}, {name: "TraceRequest", type: new vtrace.Request()._type}];
_typeVeyronRPCResponse.kind = vdl.Kind.STRUCT;
_typeVeyronRPCResponse.name = "v.io/wspr/veyron/services/wsprd/app.VeyronRPCResponse";
_typeVeyronRPCResponse.fields = [{name: "OutArgs", type: _type1}, {name: "TraceResponse", type: new vtrace.Response()._type}];
module.exports.BlessingRequest = (vdl.Registry.lookupOrCreateConstructor(_typeBlessingRequest));
module.exports.VeyronRPCRequest = (vdl.Registry.lookupOrCreateConstructor(_typeVeyronRPCRequest));
module.exports.VeyronRPCResponse = (vdl.Registry.lookupOrCreateConstructor(_typeVeyronRPCResponse));




// Consts:



// Errors:



// Services:

   

  
    
function Controller(){}
module.exports.Controller = Controller

    
      
Controller.prototype.serve = function(ctx, name, serverId) {
  throw new Error('Method Serve not implemented');
};
    
      
Controller.prototype.stop = function(ctx, serverId) {
  throw new Error('Method Stop not implemented');
};
    
      
Controller.prototype.addName = function(ctx, serverId, name) {
  throw new Error('Method AddName not implemented');
};
    
      
Controller.prototype.removeName = function(ctx, serverId, name) {
  throw new Error('Method RemoveName not implemented');
};
     

    
Controller.prototype._serviceDescription = {
  name: 'Controller',
  pkgPath: 'v.io/wspr/veyron/services/wsprd/app',
  doc: "",
  embeds: [],
  methods: [
    
      
    {
    name: 'Serve',
    doc: "// Serve instructs WSPR to start listening for calls on behalf\n// of a javascript server.",
    inArgs: [{
      name: 'name',
      doc: "",
      type: vdl.Types.STRING
    },
    {
      name: 'serverId',
      doc: "",
      type: vdl.Types.UINT32
    },
    ],
    outArgs: [],
    inStream: null,
    outStream: null,
    tags: []
  },
    
      
    {
    name: 'Stop',
    doc: "// Stop instructs WSPR to stop listening for calls for the\n// given javascript server.",
    inArgs: [{
      name: 'serverId',
      doc: "",
      type: vdl.Types.UINT32
    },
    ],
    outArgs: [],
    inStream: null,
    outStream: null,
    tags: []
  },
    
      
    {
    name: 'AddName',
    doc: "// AddName adds a published name to an existing server.",
    inArgs: [{
      name: 'serverId',
      doc: "",
      type: vdl.Types.UINT32
    },
    {
      name: 'name',
      doc: "",
      type: vdl.Types.STRING
    },
    ],
    outArgs: [],
    inStream: null,
    outStream: null,
    tags: []
  },
    
      
    {
    name: 'RemoveName',
    doc: "// RemoveName removes a published name from an existing server.",
    inArgs: [{
      name: 'serverId',
      doc: "",
      type: vdl.Types.UINT32
    },
    {
      name: 'name',
      doc: "",
      type: vdl.Types.STRING
    },
    ],
    outArgs: [],
    inStream: null,
    outStream: null,
    tags: []
  },
     
  ]
};

   
 


