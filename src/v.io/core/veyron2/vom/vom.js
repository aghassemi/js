// This file was auto-generated by the veyron vdl tool.
var vom = require('../../../.././vom/vom');






module.exports = {};



// Types:
var _type1 = new vom.Type();
var _type2 = new vom.Type();
var _type3 = new vom.Type();
var _typeControlKind = new vom.Type();
var _typeDumpAtom = new vom.Type();
var _typeDumpKind = new vom.Type();
var _typePrimitive = new vom.Type();
var _typetypeID = new vom.Type();
var _typewireArray = new vom.Type();
var _typewireEnum = new vom.Type();
var _typewireField = new vom.Type();
var _typewireList = new vom.Type();
var _typewireMap = new vom.Type();
var _typewireNamed = new vom.Type();
var _typewireOptional = new vom.Type();
var _typewireSet = new vom.Type();
var _typewireStruct = new vom.Type();
var _typewireType = new vom.Type();
var _typewireUnion = new vom.Type();
_type1.kind = vom.Kind.LIST;
_type1.name = "";
_type1.elem = vom.Types.BYTE;
_type2.kind = vom.Kind.LIST;
_type2.name = "";
_type2.elem = vom.Types.STRING;
_type3.kind = vom.Kind.LIST;
_type3.name = "";
_type3.elem = _typewireField;
_typeControlKind.kind = vom.Kind.ENUM;
_typeControlKind.name = "v.io/core/veyron2/vom.ControlKind";
_typeControlKind.labels = ["NIL", "EOF"];
_typeDumpAtom.kind = vom.Kind.STRUCT;
_typeDumpAtom.name = "v.io/core/veyron2/vom.DumpAtom";
_typeDumpAtom.fields = [{name: "Kind", type: _typeDumpKind}, {name: "Bytes", type: _type1}, {name: "Data", type: _typePrimitive}, {name: "Debug", type: vom.Types.STRING}];
_typeDumpKind.kind = vom.Kind.ENUM;
_typeDumpKind.name = "v.io/core/veyron2/vom.DumpKind";
_typeDumpKind.labels = ["Magic", "Control", "MsgID", "TypeMsg", "ValueMsg", "MsgLen", "TypeID", "PrimValue", "ByteLen", "ValueLen", "Index", "WireTypeIndex"];
_typePrimitive.kind = vom.Kind.UNION;
_typePrimitive.name = "v.io/core/veyron2/vom.Primitive";
_typePrimitive.fields = [{name: "PBool", type: vom.Types.BOOL}, {name: "PByte", type: vom.Types.BYTE}, {name: "PUint", type: vom.Types.UINT64}, {name: "PInt", type: vom.Types.INT64}, {name: "PFloat", type: vom.Types.FLOAT64}, {name: "PString", type: vom.Types.STRING}, {name: "PControl", type: _typeControlKind}];
_typetypeID.kind = vom.Kind.UINT64;
_typetypeID.name = "v.io/core/veyron2/vom.typeID";
_typewireArray.kind = vom.Kind.STRUCT;
_typewireArray.name = "v.io/core/veyron2/vom.wireArray";
_typewireArray.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Elem", type: _typetypeID}, {name: "Len", type: vom.Types.UINT64}];
_typewireEnum.kind = vom.Kind.STRUCT;
_typewireEnum.name = "v.io/core/veyron2/vom.wireEnum";
_typewireEnum.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Labels", type: _type2}];
_typewireField.kind = vom.Kind.STRUCT;
_typewireField.name = "v.io/core/veyron2/vom.wireField";
_typewireField.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Type", type: _typetypeID}];
_typewireList.kind = vom.Kind.STRUCT;
_typewireList.name = "v.io/core/veyron2/vom.wireList";
_typewireList.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Elem", type: _typetypeID}];
_typewireMap.kind = vom.Kind.STRUCT;
_typewireMap.name = "v.io/core/veyron2/vom.wireMap";
_typewireMap.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Key", type: _typetypeID}, {name: "Elem", type: _typetypeID}];
_typewireNamed.kind = vom.Kind.STRUCT;
_typewireNamed.name = "v.io/core/veyron2/vom.wireNamed";
_typewireNamed.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Base", type: _typetypeID}];
_typewireOptional.kind = vom.Kind.STRUCT;
_typewireOptional.name = "v.io/core/veyron2/vom.wireOptional";
_typewireOptional.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Elem", type: _typetypeID}];
_typewireSet.kind = vom.Kind.STRUCT;
_typewireSet.name = "v.io/core/veyron2/vom.wireSet";
_typewireSet.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Key", type: _typetypeID}];
_typewireStruct.kind = vom.Kind.STRUCT;
_typewireStruct.name = "v.io/core/veyron2/vom.wireStruct";
_typewireStruct.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Fields", type: _type3}];
_typewireType.kind = vom.Kind.UNION;
_typewireType.name = "v.io/core/veyron2/vom.wireType";
_typewireType.fields = [{name: "NamedT", type: _typewireNamed}, {name: "EnumT", type: _typewireEnum}, {name: "ArrayT", type: _typewireArray}, {name: "ListT", type: _typewireList}, {name: "SetT", type: _typewireSet}, {name: "MapT", type: _typewireMap}, {name: "StructT", type: _typewireStruct}, {name: "UnionT", type: _typewireUnion}, {name: "OptionalT", type: _typewireOptional}];
_typewireUnion.kind = vom.Kind.STRUCT;
_typewireUnion.name = "v.io/core/veyron2/vom.wireUnion";
_typewireUnion.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Fields", type: _type3}];
module.exports.ControlKind = (vom.Registry.lookupOrCreateConstructor(_typeControlKind));
module.exports.DumpAtom = (vom.Registry.lookupOrCreateConstructor(_typeDumpAtom));
module.exports.DumpKind = (vom.Registry.lookupOrCreateConstructor(_typeDumpKind));
module.exports.Primitive = (vom.Registry.lookupOrCreateConstructor(_typePrimitive));
module.exports.typeID = (vom.Registry.lookupOrCreateConstructor(_typetypeID));
module.exports.wireArray = (vom.Registry.lookupOrCreateConstructor(_typewireArray));
module.exports.wireEnum = (vom.Registry.lookupOrCreateConstructor(_typewireEnum));
module.exports.wireField = (vom.Registry.lookupOrCreateConstructor(_typewireField));
module.exports.wireList = (vom.Registry.lookupOrCreateConstructor(_typewireList));
module.exports.wireMap = (vom.Registry.lookupOrCreateConstructor(_typewireMap));
module.exports.wireNamed = (vom.Registry.lookupOrCreateConstructor(_typewireNamed));
module.exports.wireOptional = (vom.Registry.lookupOrCreateConstructor(_typewireOptional));
module.exports.wireSet = (vom.Registry.lookupOrCreateConstructor(_typewireSet));
module.exports.wireStruct = (vom.Registry.lookupOrCreateConstructor(_typewireStruct));
module.exports.wireType = (vom.Registry.lookupOrCreateConstructor(_typewireType));
module.exports.wireUnion = (vom.Registry.lookupOrCreateConstructor(_typewireUnion));




// Consts:

  module.exports.WireIDBool = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x1])));

  module.exports.WireIDByte = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x2])));

  module.exports.WireIDString = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x3])));

  module.exports.WireIDUint16 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x4])));

  module.exports.WireIDUint32 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x5])));

  module.exports.WireIDUint64 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x6])));

  module.exports.WireIDInt16 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x7])));

  module.exports.WireIDInt32 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x8])));

  module.exports.WireIDInt64 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x9])));

  module.exports.WireIDFloat32 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0xa])));

  module.exports.WireIDFloat64 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0xb])));

  module.exports.WireIDComplex64 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0xc])));

  module.exports.WireIDComplex128 = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0xd])));

  module.exports.WireIDTypeObject = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0xe])));

  module.exports.WireIDAny = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0xf])));

  module.exports.WireIDByteList = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x27])));

  module.exports.WireIDStringList = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x28])));

  module.exports.WireIDFirstUserType = new (vom.Registry.lookupOrCreateConstructor(_typetypeID))(new vom.BigInt(1, new Uint8Array([0x29])));

  module.exports.WireCtrlNil = new (vom.Registry.lookupOrCreateConstructor(vom.Types.BYTE))(224);

  module.exports.WireCtrlEOF = new (vom.Registry.lookupOrCreateConstructor(vom.Types.BYTE))(225);



// Errors:



// Services:

   

   
 


