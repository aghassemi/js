// This file was auto-generated by the veyron vdl tool.
var vom = require('vom');
// TODO(bjornick): Remove unused imports.
var Types = vom.Types;
var Type = vom.Type;
var Kind = vom.Kind;
var BigInt = vom.BigInt;
var Complex = vom.Complex;
var Builtins = vom.Builtins;
var Registry = vom.Registry;




var uniqueid = require('./../uniqueid/uniqueid');

module.exports = {};



// Types:
var _type1 = new Type();
var _type2 = new Type();
var _typeAnnotation = new Type();
var _typeRequest = new Type();
var _typeResponse = new Type();
var _typeSpanRecord = new Type();
var _typeTraceMethod = new Type();
var _typeTraceRecord = new Type();
_type1.kind = Kind.LIST;
_type1.name = "";
_type1.elem = _typeSpanRecord;
_type2.kind = Kind.LIST;
_type2.name = "";
_type2.elem = _typeAnnotation;
_typeAnnotation.kind = Kind.STRUCT;
_typeAnnotation.name = "v.io/core/veyron2/vtrace.Annotation";
_typeAnnotation.fields = [{name: "When", type: Types.INT64}, {name: "Message", type: Types.STRING}];
_typeRequest.kind = Kind.STRUCT;
_typeRequest.name = "v.io/core/veyron2/vtrace.Request";
_typeRequest.fields = [{name: "SpanID", type: uniqueid.ID}, {name: "TraceID", type: uniqueid.ID}, {name: "Method", type: _typeTraceMethod}];
_typeResponse.kind = Kind.STRUCT;
_typeResponse.name = "v.io/core/veyron2/vtrace.Response";
_typeResponse.fields = [{name: "Method", type: _typeTraceMethod}, {name: "Trace", type: _typeTraceRecord}];
_typeSpanRecord.kind = Kind.STRUCT;
_typeSpanRecord.name = "v.io/core/veyron2/vtrace.SpanRecord";
_typeSpanRecord.fields = [{name: "ID", type: uniqueid.ID}, {name: "Parent", type: uniqueid.ID}, {name: "Name", type: Types.STRING}, {name: "Start", type: Types.INT64}, {name: "End", type: Types.INT64}, {name: "Annotations", type: _type2}];
_typeTraceMethod.kind = Kind.INT32;
_typeTraceMethod.name = "v.io/core/veyron2/vtrace.TraceMethod";
_typeTraceRecord.kind = Kind.STRUCT;
_typeTraceRecord.name = "v.io/core/veyron2/vtrace.TraceRecord";
_typeTraceRecord.fields = [{name: "ID", type: uniqueid.ID}, {name: "Spans", type: _type1}];
module.exports.Annotation = Registry.lookupOrCreateConstructor(_typeAnnotation, "Annotation");
module.exports.Request = Registry.lookupOrCreateConstructor(_typeRequest, "Request");
module.exports.Response = Registry.lookupOrCreateConstructor(_typeResponse, "Response");
module.exports.SpanRecord = Registry.lookupOrCreateConstructor(_typeSpanRecord, "SpanRecord");
module.exports.TraceMethod = Registry.lookupOrCreateConstructor(_typeTraceMethod, "TraceMethod");
module.exports.TraceRecord = Registry.lookupOrCreateConstructor(_typeTraceRecord, "TraceRecord");




// Consts:

  module.exports.None = new (Registry.lookupOrCreateConstructor(_typeTraceMethod))(0);

  module.exports.InMemory = new (Registry.lookupOrCreateConstructor(_typeTraceMethod))(1);




function NotImplementedMethod(name) {
  throw new Error('Method ' + name + ' not implemented');
}


// Services:

   
 


