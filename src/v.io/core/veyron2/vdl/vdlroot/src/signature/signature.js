// This file was auto-generated by the veyron vdl tool.
var vom = require('.././../../../../../../vom/vom');





module.exports = {};



// Types:
var _type1 = new vom.Type();
var _type2 = new vom.Type();
var _type3 = new vom.Type();
var _type4 = new vom.Type();
var _type5 = new vom.Type();
var _typeArg = new vom.Type();
var _typeEmbed = new vom.Type();
var _typeInterface = new vom.Type();
var _typeMethod = new vom.Type();
_type1.kind = vom.Kind.LIST;
_type1.name = "";
_type1.elem = _typeEmbed;
_type2.kind = vom.Kind.LIST;
_type2.name = "";
_type2.elem = _typeMethod;
_type3.kind = vom.Kind.LIST;
_type3.name = "";
_type3.elem = _typeArg;
_type4.kind = vom.Kind.NILABLE;
_type4.name = "";
_type4.elem = _typeArg;
_type5.kind = vom.Kind.LIST;
_type5.name = "";
_type5.elem = vom.Types.ANY;
_typeArg.kind = vom.Kind.STRUCT;
_typeArg.name = "signature.Arg";
_typeArg.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Doc", type: vom.Types.STRING}, {name: "Type", type: vom.Types.TYPEOBJECT}];
_typeEmbed.kind = vom.Kind.STRUCT;
_typeEmbed.name = "signature.Embed";
_typeEmbed.fields = [{name: "Name", type: vom.Types.STRING}, {name: "PkgPath", type: vom.Types.STRING}, {name: "Doc", type: vom.Types.STRING}];
_typeInterface.kind = vom.Kind.STRUCT;
_typeInterface.name = "signature.Interface";
_typeInterface.fields = [{name: "Name", type: vom.Types.STRING}, {name: "PkgPath", type: vom.Types.STRING}, {name: "Doc", type: vom.Types.STRING}, {name: "Embeds", type: _type1}, {name: "Methods", type: _type2}];
_typeMethod.kind = vom.Kind.STRUCT;
_typeMethod.name = "signature.Method";
_typeMethod.fields = [{name: "Name", type: vom.Types.STRING}, {name: "Doc", type: vom.Types.STRING}, {name: "InArgs", type: _type3}, {name: "OutArgs", type: _type3}, {name: "InStream", type: _type4}, {name: "OutStream", type: _type4}, {name: "Tags", type: _type5}];
module.exports.Arg = (vom.Registry.lookupOrCreateConstructor(_typeArg));
module.exports.Embed = (vom.Registry.lookupOrCreateConstructor(_typeEmbed));
module.exports.Interface = (vom.Registry.lookupOrCreateConstructor(_typeInterface));
module.exports.Method = (vom.Registry.lookupOrCreateConstructor(_typeMethod));




// Consts:



// Errors:



function NotImplementedMethod(name) {
  throw new Error('Method ' + name + ' not implemented');
}


// Services:

   
 


