// This file was auto-generated by the veyron vdl tool.
var vom = require('vom');
// TODO(bjornick): Remove unused imports.
var Types = vom.Types;
var Type = vom.Type;
var Kind = vom.Kind;
var BigInt = vom.BigInt;
var Complex = vom.Complex;
var Builtins = vom.Builtins;
var Registry = vom.Registry;





module.exports = {};



// Types:
var _type1 = new Type();
var _type2 = new Type();
var _type3 = new Type();
var _typeConfig = new Type();
var _typeGenLanguage = new Type();
var _typeGoConfig = new Type();
var _typeGoNativeType = new Type();
var _typeJavaConfig = new Type();
var _typeJavascriptConfig = new Type();
_type1.kind = Kind.SET;
_type1.name = "";
_type1.key = _typeGenLanguage;
_type2.kind = Kind.LIST;
_type2.name = "";
_type2.elem = _typeGoNativeType;
_type3.kind = Kind.LIST;
_type3.name = "";
_type3.elem = Types.STRING;
_typeConfig.kind = Kind.STRUCT;
_typeConfig.name = "vdltool.Config";
_typeConfig.fields = [{name: "GenLanguages", type: _type1}, {name: "Go", type: _typeGoConfig}, {name: "Java", type: _typeJavaConfig}, {name: "Javascript", type: _typeJavascriptConfig}];
_typeGenLanguage.kind = Kind.ENUM;
_typeGenLanguage.name = "vdltool.GenLanguage";
_typeGenLanguage.labels = ["Go", "Java", "Javascript"];
_typeGoConfig.kind = Kind.STRUCT;
_typeGoConfig.name = "vdltool.GoConfig";
_typeGoConfig.fields = [{name: "NativeTypes", type: _type2}];
_typeGoNativeType.kind = Kind.STRUCT;
_typeGoNativeType.name = "vdltool.GoNativeType";
_typeGoNativeType.fields = [{name: "WireType", type: Types.STRING}, {name: "NativeType", type: Types.STRING}, {name: "Imports", type: _type3}];
_typeJavaConfig.kind = Kind.STRUCT;
_typeJavaConfig.name = "vdltool.JavaConfig";
_typeJavaConfig.fields = [];
_typeJavascriptConfig.kind = Kind.STRUCT;
_typeJavascriptConfig.name = "vdltool.JavascriptConfig";
_typeJavascriptConfig.fields = [];
module.exports.Config = (Registry.lookupOrCreateConstructor(_typeConfig));
module.exports.GenLanguage = (Registry.lookupOrCreateConstructor(_typeGenLanguage));
module.exports.GoConfig = (Registry.lookupOrCreateConstructor(_typeGoConfig));
module.exports.GoNativeType = (Registry.lookupOrCreateConstructor(_typeGoNativeType));
module.exports.JavaConfig = (Registry.lookupOrCreateConstructor(_typeJavaConfig));
module.exports.JavascriptConfig = (Registry.lookupOrCreateConstructor(_typeJavascriptConfig));




// Consts:




function NotImplementedMethod(name) {
  throw new Error('Method ' + name + ' not implemented');
}


// Services:

   
 


