// This file was auto-generated by the veyron vdl tool.
var vom = require('../../../.././vom/vom');




var uniqueid = require('./../uniqueid/uniqueid');

module.exports = {};



// Types:
var _type1 = new vom.Type();
var _type2 = new vom.Type();
var _type3 = new vom.Type();
var _type4 = new vom.Type();
var _type5 = new vom.Type();
var _type6 = new vom.Type();
var _type7 = new vom.Type();
var _typeBlessingPattern = new vom.Type();
var _typeCaveat = new vom.Type();
var _typeCaveatDescriptor = new vom.Type();
var _typeCertificate = new vom.Type();
var _typeDischargeImpetus = new vom.Type();
var _typeHash = new vom.Type();
var _typeSignature = new vom.Type();
var _typeThirdPartyRequirements = new vom.Type();
var _typeWireBlessings = new vom.Type();
var _typemethodCaveat = new vom.Type();
var _typepublicKeyDischarge = new vom.Type();
var _typepublicKeyThirdPartyCaveat = new vom.Type();
var _typeunixTimeExpiryCaveat = new vom.Type();
_type1.kind = vom.Kind.ARRAY;
_type1.name = "";
_type1.len = 16;
_type1.elem = vom.Types.BYTE;
_type2.kind = vom.Kind.LIST;
_type2.name = "";
_type2.elem = _typeCaveat;
_type3.kind = vom.Kind.LIST;
_type3.name = "";
_type3.elem = vom.Types.BYTE;
_type4.kind = vom.Kind.LIST;
_type4.name = "";
_type4.elem = _typeBlessingPattern;
_type5.kind = vom.Kind.LIST;
_type5.name = "";
_type5.elem = vom.Types.ANY;
_type6.kind = vom.Kind.LIST;
_type6.name = "";
_type6.elem = _type7;
_type7.kind = vom.Kind.LIST;
_type7.name = "";
_type7.elem = _typeCertificate;
_typeBlessingPattern.kind = vom.Kind.STRING;
_typeBlessingPattern.name = "v.io/core/veyron2/security.BlessingPattern";
_typeCaveat.kind = vom.Kind.STRUCT;
_typeCaveat.name = "v.io/core/veyron2/security.Caveat";
_typeCaveat.fields = [{name: "ValidatorVOM", type: _type3}, {name: "Id", type: new uniqueid.ID()._type}, {name: "ParamsVom", type: _type3}];
_typeCaveatDescriptor.kind = vom.Kind.STRUCT;
_typeCaveatDescriptor.name = "v.io/core/veyron2/security.CaveatDescriptor";
_typeCaveatDescriptor.fields = [{name: "Id", type: new uniqueid.ID()._type}, {name: "ParamsType", type: vom.Types.TYPEOBJECT}];
_typeCertificate.kind = vom.Kind.STRUCT;
_typeCertificate.name = "v.io/core/veyron2/security.Certificate";
_typeCertificate.fields = [{name: "Extension", type: vom.Types.STRING}, {name: "PublicKey", type: _type3}, {name: "Caveats", type: _type2}, {name: "Signature", type: _typeSignature}];
_typeDischargeImpetus.kind = vom.Kind.STRUCT;
_typeDischargeImpetus.name = "v.io/core/veyron2/security.DischargeImpetus";
_typeDischargeImpetus.fields = [{name: "Server", type: _type4}, {name: "Method", type: vom.Types.STRING}, {name: "Arguments", type: _type5}];
_typeHash.kind = vom.Kind.STRING;
_typeHash.name = "v.io/core/veyron2/security.Hash";
_typeSignature.kind = vom.Kind.STRUCT;
_typeSignature.name = "v.io/core/veyron2/security.Signature";
_typeSignature.fields = [{name: "Purpose", type: _type3}, {name: "Hash", type: _typeHash}, {name: "R", type: _type3}, {name: "S", type: _type3}];
_typeThirdPartyRequirements.kind = vom.Kind.STRUCT;
_typeThirdPartyRequirements.name = "v.io/core/veyron2/security.ThirdPartyRequirements";
_typeThirdPartyRequirements.fields = [{name: "ReportServer", type: vom.Types.BOOL}, {name: "ReportMethod", type: vom.Types.BOOL}, {name: "ReportArguments", type: vom.Types.BOOL}];
_typeWireBlessings.kind = vom.Kind.STRUCT;
_typeWireBlessings.name = "v.io/core/veyron2/security.WireBlessings";
_typeWireBlessings.fields = [{name: "CertificateChains", type: _type6}];
_typemethodCaveat.kind = vom.Kind.LIST;
_typemethodCaveat.name = "v.io/core/veyron2/security.methodCaveat";
_typemethodCaveat.elem = vom.Types.STRING;
_typepublicKeyDischarge.kind = vom.Kind.STRUCT;
_typepublicKeyDischarge.name = "v.io/core/veyron2/security.publicKeyDischarge";
_typepublicKeyDischarge.fields = [{name: "ThirdPartyCaveatID", type: vom.Types.STRING}, {name: "Caveats", type: _type2}, {name: "Signature", type: _typeSignature}];
_typepublicKeyThirdPartyCaveat.kind = vom.Kind.STRUCT;
_typepublicKeyThirdPartyCaveat.name = "v.io/core/veyron2/security.publicKeyThirdPartyCaveat";
_typepublicKeyThirdPartyCaveat.fields = [{name: "Nonce", type: _type1}, {name: "Caveats", type: _type2}, {name: "DischargerKey", type: _type3}, {name: "DischargerLocation", type: vom.Types.STRING}, {name: "DischargerRequirements", type: _typeThirdPartyRequirements}];
_typeunixTimeExpiryCaveat.kind = vom.Kind.INT64;
_typeunixTimeExpiryCaveat.name = "v.io/core/veyron2/security.unixTimeExpiryCaveat";
module.exports.BlessingPattern = (vom.Registry.lookupOrCreateConstructor(_typeBlessingPattern));
module.exports.Caveat = (vom.Registry.lookupOrCreateConstructor(_typeCaveat));
module.exports.CaveatDescriptor = (vom.Registry.lookupOrCreateConstructor(_typeCaveatDescriptor));
module.exports.Certificate = (vom.Registry.lookupOrCreateConstructor(_typeCertificate));
module.exports.DischargeImpetus = (vom.Registry.lookupOrCreateConstructor(_typeDischargeImpetus));
module.exports.Hash = (vom.Registry.lookupOrCreateConstructor(_typeHash));
module.exports.Signature = (vom.Registry.lookupOrCreateConstructor(_typeSignature));
module.exports.ThirdPartyRequirements = (vom.Registry.lookupOrCreateConstructor(_typeThirdPartyRequirements));
module.exports.WireBlessings = (vom.Registry.lookupOrCreateConstructor(_typeWireBlessings));
module.exports.methodCaveat = (vom.Registry.lookupOrCreateConstructor(_typemethodCaveat));
module.exports.publicKeyDischarge = (vom.Registry.lookupOrCreateConstructor(_typepublicKeyDischarge));
module.exports.publicKeyThirdPartyCaveat = (vom.Registry.lookupOrCreateConstructor(_typepublicKeyThirdPartyCaveat));
module.exports.unixTimeExpiryCaveat = (vom.Registry.lookupOrCreateConstructor(_typeunixTimeExpiryCaveat));




// Consts:

  module.exports.NoExtension = new (vom.Registry.lookupOrCreateConstructor(_typeBlessingPattern))("$");

  module.exports.AllPrincipals = new (vom.Registry.lookupOrCreateConstructor(_typeBlessingPattern))("...");

  module.exports.ChainSeparator = new (vom.Registry.lookupOrCreateConstructor(vom.Types.STRING))("/");

  module.exports.SHA1Hash = new (vom.Registry.lookupOrCreateConstructor(_typeHash))("SHA1");

  module.exports.SHA256Hash = new (vom.Registry.lookupOrCreateConstructor(_typeHash))("SHA256");

  module.exports.SHA384Hash = new (vom.Registry.lookupOrCreateConstructor(_typeHash))("SHA384");

  module.exports.SHA512Hash = new (vom.Registry.lookupOrCreateConstructor(_typeHash))("SHA512");

  module.exports.SignatureForMessageSigning = new (vom.Registry.lookupOrCreateConstructor(vom.Types.STRING))("S");

  module.exports.SignatureForBlessingCertificates = new (vom.Registry.lookupOrCreateConstructor(vom.Types.STRING))("B");

  module.exports.SignatureForDischarge = new (vom.Registry.lookupOrCreateConstructor(vom.Types.STRING))("D");



// Errors:



function NotImplementedMethod(name) {
  throw new Error('Method ' + name + ' not implemented');
}


// Services:

   

   
 


